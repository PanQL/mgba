cd /mnt/
ls
cd ../media/
ls
poweroff
ls /media/
ls /mnt/
cd /media/
ls
ls cdrom/
ls floppy/
ls usb/
poweroff
uname -a
poweroff
apk add virtualbox-guest-addition
apk list virtualbox-guest-addition
apk list virtualbox-guest
apk list virtual
apk --help
apk list virtualbox
apk list gcc
apk list g++
apk list virtualbox
apk list vmware
apk list *tool
apk list virtual*
apk list vir*
apk list vmware*
apk list vm*
apk list v*
apk add vim
vim /etc/apk/repositories 
apk update
apk add virtualbox-guest-additions virtualbox-guest-modules-virt
modprobe -a vboxsf
apk add virtualbox-guest-modules-virt
apk add virtualbox-guest-additions
mount -t vboxsf vbox_shared /mnt/outside
ls /media/
ls /mnt/
reboot
df -ah
ls /lib/modules/4.19.34-0-virt/
apt add linux-header
apt list linux-head*
apk list linux-head*
apk add linux-header
apk add linux-headers
apk remove virtualbox-guest-additions
apk del virtualbox-guest-additions
apk del virtualbox-guest-modules-virt
apk add virtualbox-guest-additions virtualbox-guest-modules-virt
ls /lib/modules/4.19.34-0-virt/
apk add virtualbox-additions-grsec
echo "http://nl.alpinelinux.org/alpine/edge/tesing" >> /etc/apk/repositories 
vim /etc/apk/repositories 
apk update
apk add virtualbox-additions-grsec
apk list virtualbox-additions-*
apk list virtualbox-addition-*
apk list virtualbox-*
apk add virtualbox-guest-additions
echo vboxpci >> /etc/modules
echo vboxdrv >> /etc/modules
echo vboxnetflt >> /etc/modules
apk add virtualbox-additions-grsec
reboot
ls /media/
df -ah
uname -a
apk list virtualbox-additions
apk list virtualbox-additions*
apk list virtualbox*
apk del virtualbox-guest-modules-virt
apk add virtualbox-guest-modules-virt
ls /lib/modules/4.19.34-0-virt/modules.order
sudo vim /etc/apk/repositories 
vim /etc/apk/repositories 
apk upgrade --update-cache --available
sync
reboot
apk add virtualbox-additions-grsec
echo "http://nl.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories 
apk update
apk add virtualbox-additions-grsec
apk list virtualbox-additions-*
apk list virtualbox-*
apk add virtualbox-additions-openrc
apk add virtualbox-guest-additions-openrc
apk add virtualbox-guest-additions
apk add virtualbox-guest-additions-virt
apk add virtualbox-guest-modules-virt
rc-update add virtualbox-guest-additions default
reboot
mount -t vboxsf shared_folder /mnt
apk del virtualbox-guest-modules-virt
apk add virtualbox-guest-modules-virt
modprobe vboxsf
apk list virtualbox*
apk add virtualbox-guest-modules-vanilla
modprobe vboxsf
apk add virtualbox-guest-modules-virt
mount -t vboxsf shared_folder /mnt
reboot
ls /media/
cd /media/sf_mgba/
ls
apk add g++
apk list *libc
apk list libc
apk add gcc
ls /usr/
ls
apk add cmake
ls
mkdir build
cd build/
cmake -DMUSL=/usr -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
apk add cmake
ls
make
apk add make
make
rm * -r
ls
cmake ..
rm * -r
cmake ..
make
rm * -rf
rm * -r
ls
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
ls
make clean
cd ..
ls
cd sf_mgba/
ls
mkdir ~/mgba
cp * ~/mgba/ -r
cd ~/mgba/
ls
cd build/
ls
make
ldd libmgba.so
poweroff
cd /media/sf_mgba/
ls
cd build/
ls
make clean
make
df -ah
vim /etc/fstab
clear
ls
poweroff
cd /media/sf_mgba/
ls
cd build/
make clean
make
ls
poweroff
cd /media/sf_mgba/
ls
cd build/
ls
rm * -r
ls
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
cmake --version
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
ldd libmgba.so
ls
ldd libmgba.so.0.8.0 
ls
cd rco
cd ../rcore-port/
ls
mkdir build
cd build/
cmake ..
rm * -r
cmake ..
make
cd ../../../build
cd ../../build
cd -
rm * -r
cmake ..
make
ls
rm * -r
cmake ..
make
ls
cmake ..
rm * -r
cmake ..
ls
make
ls
cd ../src/
ls
gcc -o mgba.bin main.c
cd ../build/
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
cd ../src/
ls
gcc main.c -L /media/sf_mgba/build -llibmage.so.0.8.0
export C_INCLUDE_PATH=/media/sf_mgba/include
gcc main.c -L /media/sf_mgba/build -llibmage.so.0.8.0
export C_INCLUDE_PATH=/media/sf_mgba
gcc main.c -L /media/sf_mgba/build -llibmage.so.0.8.0
rm libmgba.so.0.8.0 
cd ../build/
ls
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
make
cmake ..
rm * -r
cmake ..
make
rm * -r
cmake ..
make
cmake ..
rm * -r
cmake ..
make
rm * -r
cmake ..
make
poweroff
cd /media/sf_mgba/rcore-port/
ls
cd build/
ls
rm * -r
cmake ..
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
ls
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
rm * -r
cmake ..
make
rm * -r
cmake ..
make
ls
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
poweroff
cd /media/sf_mgba/
ls
cd build/
ls
rm * -r
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
rm * -r
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
ls
date
make clean
make
ls
ll
ls -l
cd ../rcore-port/build/
ls
rm * -r
cmake ..
make
rm * -r
cmake ..
make
ls
cmake ..
rm * -r
cmake ..
make
cmake --version
rm * -r
cmake ..
make
rm * -r
cmake ..
make
cd ../src/
gcc -I ../../include/ -L ../../build/ -l libmage.a -o main.c mgba
gcc -I ../../include/ -L ../../build/ -l libmage.a -o main.o main.c
gcc -I ../../include/ -L ../../build/ -l mage -o main.o main.c
gcc -I ../../include/ -L../../build/ -lmage -o main.o main.c
gcc -I ../../include/ -o main.o main.c
ls
ld main.o ../../build/libmgba.a mgba
ld mgba main.o ../../build/libmgba.a
ld -o rcore-mgba main.o -L ../../build/ -lmgba
ls
./rcore-mgba 
rm rcore-mgba 
ld -o rcore-mgba main.o ../../build/libmgba.a 
rm rcore-mgba 
gcc -m64 -o rmgba main.o ../../build/libmgba.a 
ls
gcc -o rmgba main.o ../../build/libmgba.a 
cd ../build/
rm * -r
cmake ..
make
rm * -r
cmake ..
make
make clean
make
ls
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
make
rm * -r
cmake ..
rm * -r
cmake ..
make
cd ../../build/
rm * -r
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
ls
cd ../rcore-port/build/
ls
rm * -r
cmake ..
make
cd ../../build/
ldd libmgba.a 
cd ../rcore-port/
cd build/
rm * -r
cmake ..
make
rm * -r
cmake ..
make
gcc -version
gcc --version
cd ../../build/
rm * -r
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
cd ../rcore-port/build/
make
./mgba 
poweroff
sudo su
su
cd /media/sf_mgba/
ls
cd build/
ls
cd ..
ls
cd rcore-port/
ls
cd build/
ls
rm * -r
cmake ..
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
ls
cd rcore-port/
ls
cd build/
ls
rm * -r
cmake ..
make
ls
make clean
make
poweroff
cd /media/sf_mgba/
ls
cd rcore-port/build/
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/rcore-port/build/
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
cd rcore-port/build/
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
ls
cd rcore-port/build/
make
make clean
make
make clean
make | less
make clean
make > res.txt
ls
vim res.txt 
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
cd rcore-port/build/
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
ls ../../..
ls ../../build
cd ../..
ls
mkdir build
ls
cd build/
ls
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DLZMA=OFF ..
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
cd ../rcore-port/build/
make clean
make
rm * -r
cmake ..
make
cd ../../
ls
mkdir build
cd build/
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
cd ../rcore-port/build/
ls
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
cd build/
rm * -r
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
cd ../rcore-port/build/
make clean
make
make clean
make
cd ../../build/
ls
make
cd ../rcore-port/build/
make clean
make
make clean
make
make clean
make
make clean
make
cd ../../build/
rm * -r
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
cd ../rcore-port/build/
rm * -r
cmake ..
make
cd ../../build/
rm * -r
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make 
cd ../rcore-port/build/
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
cd ../../
mkdir build
cd build/
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
cd ../rcore-port/
ls
cd build/
ls
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
cd ../../
ls
mkdir build
cd build/
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
cd ../rcore-port/
ls
cd build/
ls
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
ls
cd build/
ls
make clean
make
cd ../rcore-port/build/
ls
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
cd rcore-port/build/
make clean
ls
rm * -r
cmake ..
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
cd ../../
make build
mkdir build
cd build/
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
cd ../rcore-port/build/
rm * -r
cmake ..
make
cd ../../build/
make
cd ../rcore-port/build/
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
mkdir build
cd build/
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
make
cd ../rcore-port/
ls
cd build/
ls
make clean
rm * -r
cmake ..
make
poweroff
cd /media/sf_mgba/rcore-port/
cd build/
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
ls
gcc fb.c -o fb
ls
gcc fb.c -o fb
poweroff
cd /media/sf_mgba/
ls
gcc fb.c -o fb
ls
./fb
gcc fb.c -o fb
./fb
ls /dev/ | grep fb
ls /dev/ | grep f
gcc fb.c -o fb
poweroff
cd /media/sf_mgba/
ls
mkdir build
cd build/
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
cd ../rcore-port/
ls
cd build/
ls
rm * -r
cmake ..
make
make clean
make
make clean
make
make clean
make
cd ../../build/
make
cd -
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
cd build/
ls
rm * -r
cmake -DUSE_MINIZIP=OFF -DUSE_ZLIB=OFF -DUSE_LZMA=OFF ..
cd ../rcore-port/build/
rm * -r
cmake ..
cd ../../build/
make
cd -
make
make clean
make
make clean
make
cd /media/sf_mgba/
cd rcore-port/build/
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
ls
cd rcore-port/
ls
cd build/
ls
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
make clean
make
poweroff
cd /media/sf_mgba/
ls
cp /* root -r
cp / root -r
